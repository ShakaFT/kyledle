x-celery-env: &celery-env
  CELERY_BROKER_URL: redis://$REDIS_HOST:$REDIS_PORT/0
  CELERY_RESULT_BACKEND: redis://$REDIS_HOST:$REDIS_PORT/0

x-redis-env: &redis-env
  REDIS_HOST: $REDIS_HOST
  REDIS_PORT: $REDIS_PORT

services:
  web:
    build:
      dockerfile: ./compose/Dockerfile
    command: flask run --host=0.0.0.0
    depends_on:
      - $REDIS_HOST
    environment:
      <<: *redis-env
      ENVIRONMENT: $ENVIRONMENT
      FLASK_APP: main:app
      FLASK_DEBUG: 1
    image: kyledle_flask:$ENVIRONMENT
    ports:
      - $WEB_PORT:5000
    volumes:
      - ./src:/src

  redis:
    image: redis:alpine
    ports:
      - $REDIS_PORT:$REDIS_PORT
    volumes:
      - redis_data:/data

  celery_worker:
    build:
      dockerfile: ./compose/Dockerfile
    command: watchmedo auto-restart --directory=/src -- celery -A config.celery worker --loglevel DEBUG --uid=nobody --gid=nogroup
    depends_on:
      - $REDIS_HOST
    environment:
      <<: [*celery-env, *redis-env]
      ENVIRONMENT: $ENVIRONMENT
    image: kyledle_celery_worker:$ENVIRONMENT
    volumes:
      - ./src:/src

  celery_beat:
    build:
      dockerfile: ./compose/Dockerfile
    command: watchmedo auto-restart --directory=/src -- celery -A config.celery beat --loglevel DEBUG --uid=nobody --gid=nogroup
    depends_on:
      - $REDIS_HOST
    environment:
      <<: [*celery-env, *redis-env]
      ENVIRONMENT: $ENVIRONMENT
    image: kyledle_celery_beat:$ENVIRONMENT
    volumes:
      - ./src:/src

volumes:
    redis_data:
